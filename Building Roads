#include <bits/stdc++.h>
using namespace std;

void dfs(int node,vector<vector<int>>& adj,vector<bool>& visited) {
    visited[node] = true;
    for(auto ne : adj[node]) {
        if(!visited[ne]) {
            dfs(ne,adj,visited);
        }
    }
}

int main() {
    int n,m;
    cin >> n >> m;
    vector<vector<int>> adj(n+1);
    for(int i = 0;i<m;i++) {
        int u,v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    vector<bool> visited(n+1,false);
    vector<int> ans;
    for(int i = 1;i<=n;i++) {
        if(!visited[i]) {
            ans.push_back(i);
            dfs(i,adj,visited);
        }
    }

    cout << ans.size() - 1 << endl;
    for(int i = 0;i<ans.size() - 1;i++) {
        cout << ans[i] << " " << ans[i+1] << endl;
    }
}
