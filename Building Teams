#include <bits/stdc++.h>
using namespace std;

void bfs(int node,vector<int>& ans,vector<vector<int>>& adj,vector<int>& vis) {
    queue<pair<int,int>> q; //{node,flag}
    q.push({node,1});
    vis[node] = 1;
    ans[node] = 1;

    while(!q.empty()) {
        auto fr = q.front();
        int curr = fr.first;
        int f = fr.second;

        ans[curr] = f;
        q.pop();

        for(auto ne : adj[curr]) {
            if(!vis[ne]) {
                if(f == 1) {
                    q.push({ne,2});
                }
                else{
                    q.push({ne,1});
                }
                vis[ne] = 1;
            }
        }
    }
}

int main() {
    int n,m;
    cin >> n >> m;

    vector<vector<int>> adj(n+1);
    for(int i = 0;i<m;i++) {
        int u,v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    vector<int> ans(n+1,0);
    vector<int> vis(n+1,0);
    for(int i = 1;i<=n;i++) {
        if(!vis[i]) {
            bfs(i,ans,adj,vis);
        }
    }
    

    for(int i = 1;i<=n;i++) {
        cout << ans[i] << " ";
    }
    cout << endl;

    return 0;

}
