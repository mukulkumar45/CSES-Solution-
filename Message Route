#include <bits/stdc++.h>
using namespace std;

void bfs(int start,int end,vector<int>& dist,vector<vector<int>>& adj)  {
    queue<pair<pair<int,int>,string>> q;  //{{node,dist},path}
    q.push({{1,0},"1"});
    dist[1] = 0;
    
    while(!q.empty()) {
        auto fr = q.front();
        q.pop();

        int node = fr.first.first;
        int dis = fr.first.second;
        string path = fr.second;
        if(node == end) {
            cout << dis + 1 << endl;
            for(auto ch : path) {
                cout << ch << " ";
            }
            cout << endl;
            return;
        }

        for(auto ne : adj[node]) {
            if(dist[ne] > dis + 1) {
                dist[ne] = dis + 1;
                q.push({{ne,dist[ne]},path + to_string(ne)});
            }
        }
    }
    cout << "IMPOSSIBLE" << endl;
}

int main() {
    int n,m;
    cin >> n >> m;
    vector<vector<int>> adj(n+1);
    for(int i = 0;i<m;i++) {
        int u,v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> dist(n+1,1e9);
    bfs(1,n,dist,adj);


}
